{"version":3,"sources":["./src/app/services/wine.datasource.ts","./src/app/wines/add/add.component.css","./src/app/wines/add/add.component.html","./src/app/wines/add/add.component.ts","./src/app/wines/edit/edit.component.css","./src/app/wines/edit/edit.component.html","./src/app/wines/edit/edit.component.ts","./src/app/wines/wines.component.css","./src/app/wines/wines.component.html","./src/app/wines/wines.component.ts","./src/app/wines/wines.module.ts","./src/app/wines/wines.routing.ts"],"names":[],"mappings":"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","file":"wines.module.chunk.js","sourcesContent":["\r\n\r\n\r\nimport {CollectionViewer, DataSource} from \"@angular/cdk/collections\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {Wine} from \"../model/wine\";\r\nimport {HttpService} from \"./http.service\";\r\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\r\nimport {catchError, finalize} from \"rxjs/operators\";\r\nimport {of} from \"rxjs/observable/of\";\r\n\r\n\r\n\r\nexport class WineDataSource implements DataSource<Wine> {\r\n\r\n    private wineSubject = new BehaviorSubject<Wine[]>([]);\r\n\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n    public loading$ = this.loadingSubject.asObservable();\r\n\r\n    constructor(private httpService: HttpService) {\r\n\r\n    }\r\n\r\n    loadWines(pageIndex, lang) {\r\n\r\n        this.loadingSubject.next(true);\r\n\r\n        this.httpService.findWines('get/wine', lang, pageIndex).pipe(\r\n                catchError(() => of([])),\r\n                finalize(() => this.loadingSubject.next(false))\r\n            )\r\n            .subscribe(wines => this.wineSubject.next(wines));\r\n\r\n    }\r\n\r\n    connect(collectionViewer: CollectionViewer): Observable<Wine[]> {\r\n        return this.wineSubject.asObservable();\r\n    }\r\n\r\n    disconnect(collectionViewer: CollectionViewer): void {\r\n        this.wineSubject.complete();\r\n        this.loadingSubject.complete();\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/wine.datasource.ts","module.exports = \"ul.dropdown-menu.dropdown-menu-left {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ndiv#card-wine {\\r\\n    margin-top: 45px;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n#langDropdown {\\r\\n    margin-top: -10px;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\ni.fcancel.material-icons {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.form-full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.image-tag {\\r\\n    font-size: 26px;\\r\\n}\\r\\n\\r\\n/* Rules for sizing the icon. */\\r\\n\\r\\n.material-icons.md-18 {\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.material-icons.md-24 {\\r\\n    font-size: 24px;\\r\\n}\\r\\n\\r\\n.material-icons.md-36 {\\r\\n    font-size: 36px;\\r\\n}\\r\\n\\r\\n.material-icons.md-48 {\\r\\n    font-size: 48px;\\r\\n}\\r\\n\\r\\n/* Rules for using icons as black on a light background. */\\r\\n\\r\\n.material-icons.md-dark {\\r\\n    color: rgba(0, 0, 0, 0.54);\\r\\n}\\r\\n\\r\\n.material-icons.md-dark.md-inactive {\\r\\n    color: rgba(0, 0, 0, 0.26);\\r\\n}\\r\\n\\r\\n/* Rules for using icons as white on a dark background. */\\r\\n\\r\\n.material-icons.md-light {\\r\\n    color: rgba(255, 255, 255, 1);\\r\\n}\\r\\n\\r\\n.material-icons.md-light.md-inactive {\\r\\n    color: rgba(255, 255, 255, 0.3);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wines/add/add.component.css\n// module id = ./src/app/wines/add/add.component.css\n// module chunks = wines.module","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <form [formGroup]=\\\"wineForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\r\\n                <div class=\\\"col-md-offset-1 col-md-10\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"dropdown\\\" *ngIf=\\\"wineForm.get('items').controls.length == 0\\\">\\r\\n                                <button class=\\\"dropdown-toggle btn btn-rose btn-block\\\" data-toggle=\\\"dropdown\\\">dodaj jezik<b class=\\\"caret\\\"></b></button>\\r\\n                                <ul class=\\\"dropdown-menu dropdown-menu-left\\\">\\r\\n                                    <li class=\\\"dropdown-header\\\">Izaberi jezik</li>\\r\\n                                    <li *ngFor=\\\"let lang of languagesData\\\">\\r\\n                                        <a (click)=\\\"addItem(lang)\\\">{{ lang.name }}</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div formArrayName=\\\"items\\\" *ngFor=\\\"let item of wineForm.get('items').controls; let i = index;\\\">\\r\\n                        <div [formGroupName]=\\\"i\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"card\\\">\\r\\n                                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"darkred\\\">\\r\\n                                            <i class=\\\"material-icons\\\">language</i>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"pull-right remove-btn\\\">\\r\\n                                            <h4 class=\\\"card-title\\\"><i (click)=\\\"onRemoveLangs(item.controls.language_name.value , item.controls.language_id.value ,  i)\\\" class=\\\"fcancel material-icons\\\">cancel</i></h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"card-content\\\">\\r\\n                                            <h4 class=\\\"card-title\\\">{{item.controls['language_name'].value}}</h4>\\r\\n                                            <div class=\\\"col-md-offset-1 col-md-10\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                                        <mat-label>Naziv vina</mat-label>\\r\\n                                                        <input matInput placeholder=\\\"Naziv\\\" formControlName=\\\"wineName\\\">\\r\\n                                                        <mat-error>\\r\\n                                                            <span *ngIf=\\\"item.controls['wineName'].touched && item.controls['wineName'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                                        </mat-error>\\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"row \\\">\\r\\n                                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                                        <mat-label>Opis vina</mat-label>\\r\\n                                                        <textarea matInput placeholder=\\\"Wine Description\\\" rows=\\\"5\\\" formControlName=\\\"wineDesc\\\"></textarea>\\r\\n                                                        <mat-error>\\r\\n                                                            <span *ngIf=\\\"item.controls['wineDesc'].touched && item.controls['wineDesc'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                                        </mat-error>\\r\\n                                                    </mat-form-field>\\r\\n                                                    <div id=\\\"langDropdown\\\" class=\\\"dropdown\\\" *ngIf=\\\"wineForm.get('items').controls.length == i+1 && languagesData.length !== 0\\\">\\r\\n                                                        <button class=\\\"dropdown-toggle btn btn-rose btn-block\\\" data-toggle=\\\"dropdown\\\">dodaj jezik<b class=\\\"caret\\\"></b></button>\\r\\n                                                        <ul class=\\\"dropdown-menu dropdown-menu-left\\\">\\r\\n                                                            <li class=\\\"dropdown-header\\\">izaberi jezik</li>\\r\\n                                                            <li *ngFor=\\\"let lang of languagesData\\\">\\r\\n                                                                <a (click)=\\\"addItem(lang)\\\">{{ lang.name }}</a>\\r\\n                                                            </li>\\r\\n                                                        </ul>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div id=\\\"card-wine\\\" class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"darkred\\\">\\r\\n                            <i class=\\\"material-icons\\\">assignment</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Forma za dodavanje vina</h4>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <div class=\\\"pull-left\\\">\\r\\n                                        <legend>Primer</legend>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"fileinput fileinput-new text-center\\\" data-provides=\\\"fileinput\\\">\\r\\n                                        <div class=\\\"fileinput-new thumbnail\\\">\\r\\n                                            <img src=\\\"./assets/img/placeholder-177x600.png\\\" alt=\\\"...\\\">\\r\\n                                        </div>\\r\\n                                        <label class=\\\"image-tag\\\">177x600</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <div class=\\\"pull-left\\\">\\r\\n                                        <legend>Slika vina</legend>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"fileinput fileinput-new text-center\\\" data-provides=\\\"fileinput\\\">\\r\\n                                        <div class=\\\"fileinput-new thumbnail\\\">\\r\\n                                            <img src=\\\"./assets/img/image_placeholder.jpg\\\" alt=\\\"...\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"fileinput-preview fileinput-exists thumbnail\\\"></div>\\r\\n                                        <div>\\r\\n                                            <span class=\\\"btn btn-rose btn-block btn-file\\\">\\r\\n                                                <span class=\\\"fileinput-new\\\">Izaberi sliku vina</span>\\r\\n                                            <span class=\\\"fileinput-exists\\\">Promeni</span>\\r\\n                                            <input (change)=\\\"onUploadWineImage($event)\\\" type=\\\"file\\\" name=\\\"logo_image\\\" />\\r\\n                                            </span>\\r\\n                                            <a href=\\\"#\\\" #bottleImage class=\\\"btn btn-danger btn-round fileinput-exists\\\" data-dismiss=\\\"fileinput\\\"><i class=\\\"fa fa-times\\\"></i>Ukloni</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <ul>\\r\\n                                        <li><strong>OBAVEŠTENJE! Odaberite da li želite da postavite pozadinu za sliku vina</strong></li>\\r\\n                                        <ul>\\r\\n                                            <li><strong>(postavi pozadinu) izaberite ukoliko je slika *jpg *jpeg formata, odnosno nema transparentu pozadinu</strong></li>\\r\\n                                        </ul>\\r\\n                                        <li><strong>OBAVEŠTENJE! Slika mora biti rezolucije 177 x 600 zbog adekvatnog prikaza u Android Aplikaciji</strong></li>\\r\\n                                    </ul>\\r\\n                                    <div class=\\\"checkbox-radios pull-left\\\">\\r\\n                                        <div class=\\\"radio\\\">\\r\\n                                            <mat-radio-group formControlName=\\\"background\\\" [value]=\\\"wineForm.controls['background'].value\\\">\\r\\n                                                <mat-radio-button [value]=\\\"1\\\"><strong>Postavi pozadinu</strong></mat-radio-button><br/>\\r\\n                                                <mat-radio-button [value]=\\\"0\\\"><strong>Ukloni pozadinu</strong></mat-radio-button>\\r\\n                                            </mat-radio-group>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Sorta vina</mat-label>\\r\\n                                        <input matInput placeholder=\\\"Sorta\\\" formControlName=\\\"type\\\">\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['type'].touched && wineForm.controls['type'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field>\\r\\n                                        <mat-label>Kategorija vina</mat-label>\\r\\n                                        <mat-select formControlName=\\\"category_id\\\" placeholder=\\\"Kategorija\\\">\\r\\n                                            <mat-option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.id}}\\\">{{category.name}}</mat-option>\\r\\n                                        </mat-select>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['category_id'].touched && wineForm.controls['category_id'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field>\\r\\n                                        <mat-label>Regija porekla vina</mat-label>\\r\\n                                        <mat-select formControlName=\\\"area_id\\\" placeholder=\\\"Regija vina\\\">\\r\\n                                            <mat-option *ngFor=\\\"let area of areas\\\" value=\\\"{{area.id}}\\\">{{area.name}}</mat-option>\\r\\n                                        </mat-select>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['area_id'].touched && wineForm.controls['area_id'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field>\\r\\n                                        <mat-label>Naziv vinarije</mat-label>\\r\\n                                        <mat-select formControlName=\\\"winery_id\\\" placeholder=\\\"Vinarija\\\">\\r\\n                                            <mat-option *ngFor=\\\"let winery of wineryList\\\" value=\\\"{{winery.id}}\\\">{{winery.name}}</mat-option>\\r\\n                                        </mat-select>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['winery_id'].touched && wineForm.controls['winery_id'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Godina berbe</mat-label>\\r\\n                                        <input matInput type=\\\"number\\\" placeholder=\\\"Godina\\\" min=\\\"0\\\" formControlName=\\\"harvest_year\\\">\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['harvest_year'].touched && wineForm.controls['harvest_year'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Alkohol</mat-label>\\r\\n                                        <input matInput type=\\\"number\\\" placeholder=\\\"Procenat alkohola &#37;\\\" min=\\\"0\\\" formControlName=\\\"alcohol\\\">\\r\\n                                        <span matSuffix>&#37;</span>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['alcohol'].touched && wineForm.controls['alcohol'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Temperatura serviranja</mat-label>\\r\\n                                        <input matInput type=\\\"number\\\" placeholder=\\\"Temperatura u &#8451;\\\" formControlName=\\\"serving_temp\\\">\\r\\n                                        <span matSuffix>&#8451;</span>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['serving_temp'].touched && wineForm.controls['serving_temp'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-rose btn-fill btn-wd\\\" [disabled]=\\\"!wineForm.valid\\\">DODAJ VINO\\r\\n                                        </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wines/add/add.component.html\n// module id = ./src/app/wines/add/add.component.html\n// module chunks = wines.module","import { Component, OnInit, OnDestroy, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormArray,\r\n  Validators,\r\n  RequiredValidator\r\n} from \"@angular/forms\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { validateConfig } from \"@angular/router/src/config\";\r\nimport { NotificationsService } from \"../../notifications/notifications.service\";\r\n\r\ndeclare var swal;\r\n\r\n@Component({\r\n  selector: \"app-add\",\r\n  templateUrl: \"./add.component.html\",\r\n  styleUrls: [\"./add.component.css\"]\r\n})\r\nexport class AddComponent implements OnInit, OnDestroy {\r\n  // variables\r\n  wineForm: FormGroup; // formBuilder / formGroup\r\n  subscriptionCategory: Subscription; // subscription for areas\r\n  subscriptionArea: Subscription; // subscription for categories\r\n  subscriptionWinery: Subscription; // subscription for winery\r\n  subscriptionLang: Subscription; // subscription for languages\r\n  categories: any[] = []; // storage result of get request for list of categories\r\n  areas: any[] = []; // storage result of get request for list of areas\r\n  wineryList: any[] = []; // storage result of get request for list of wineries\r\n  transparent: number; // saljem 0 ili 1 za sliku da li je transparenta ili ne\r\n  wineImage: any; // store uploaded image\r\n  languagesData: any[] = []; // store all languages\r\n  isFormValid;\r\n\r\n@ViewChild('f') myNgForm: any;\r\n@ViewChild('bottleImage') bottlePath: any;\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpService, private alert: NotificationsService) {}\r\n\r\n  ngOnInit() {\r\n    // get all categories\r\n    this.subscriptionCategory = this.http\r\n      .get(\"dropdown/category\", 1)\r\n      .subscribe(httpResponse => {\r\n        this.categories = httpResponse.json();\r\n      });\r\n    // get all areas\r\n    this.subscriptionArea = this.http\r\n      .get(\"dropdown/area\", 1)\r\n      .subscribe(httpresponse => {\r\n        this.areas = httpresponse.json();\r\n      });\r\n    // get all wineries\r\n    this.subscriptionWinery = this.http\r\n      .get(\"dropdown/winery\", 1)\r\n      .subscribe(httpresponse => {\r\n        this.wineryList = httpresponse.json();\r\n      });\r\n    // get all languages\r\n    this.subscriptionLang = this.http\r\n      .get(\"dropdown/language\", 1)\r\n      .subscribe(httpresponse => {\r\n        this.languagesData = httpresponse.json();\r\n      });\r\n    // declaration formBuilder and all his attrib\r\n    this.wineForm = this.fb.group({\r\n      type: [\"\", Validators.required],\r\n      area_id: [\"\", Validators.required],\r\n      category_id: [\"\", Validators.required],\r\n      winery_id: [\"\", Validators.required],\r\n      harvest_year: [\"\", Validators.required],\r\n      alcohol: [\"\", Validators.required],\r\n      serving_temp: [\"\", Validators.required],\r\n      background: [\"\", Validators.required],\r\n      items: this.fb.array([]),\r\n      languages: [\"\"]\r\n    });\r\n  }\r\n  // on uploading image \r\n  onUploadWineImage(event) {\r\n    let file = <File>event.target.files[0];\r\n    if(file.type.indexOf('image') == -1) {\r\n      this.alert.showNotification('Fajl nije slika! molimo ubacite sliku', 'danger', '');\r\n      this.isFormValid = false;\r\n      return false;\r\n    }\r\n    if(!this.validateImage(file.name)) {\r\n      this.alert.showNotification('Format slike nije podrzan! podrzani formati: *jpg *jpeg *png', 'danger', '');\r\n      this.isFormValid = false;\r\n      return false;\r\n    } else {\r\n      this.isFormValid = true;\r\n      this.wineImage = <File>event.target.files[0];\r\n    }\r\n  }\r\n  // func for validation uploaded image\r\n  validateImage(name: String) {\r\n    var ext = name.substring(name.lastIndexOf('.') + 1);\r\n    if (ext.toLowerCase() == 'png') {\r\n      return true;\r\n    } \r\n    if (ext.toLowerCase() == 'jpg') {\r\n      return true;\r\n    } \r\n    if (ext.toLowerCase() == 'jpeg') {\r\n      return true;\r\n    } \r\n      return false;\r\n  }\r\n  // removing selected language description and name from array / display\r\n  onRemoveLangs(languageName, languageId, index) {\r\n    let selected = this.wineForm.get(\"items\") as FormArray;\r\n\r\n    swal({\r\n      title: `Da li ste sigurni da želite da uklonite ${languageName} jezik`,\r\n      text: \"Vrednosti polja biće trajno obrisane!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonText: \"NE\",\r\n      confirmButtonClass: \"btn btn-success\",\r\n      cancelButtonClass: \"btn btn-danger\",\r\n      confirmButtonText: \"Da, obriši!\",\r\n      buttonsStyling: false\r\n    }).then(\r\n      () => {\r\n        swal({\r\n          title: \"Obrisano!\",\r\n          text: `${languageName} jezik je uspesno obrisan!`,\r\n          type: \"success\",\r\n          confirmButtonClass: \"btn btn-success\",\r\n          buttonsStyling: false\r\n        });\r\n        selected.removeAt(index);\r\n        let renewLang = {\r\n          name: languageName,\r\n          id: languageId\r\n        };\r\n        this.languagesData.push(renewLang);\r\n      },\r\n      error => {\r\n        this.alert.showNotification(\r\n          \"Greska! jezik nije obrisan \",\r\n          \"danger\",\r\n          \"error\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n  // function for creating interface for FormArray items\r\n  createLanguage(languageId, languageName): FormGroup {\r\n    return this.fb.group({\r\n      wineName: [\"\", Validators.required],\r\n      wineDesc: [\"\", Validators.required],\r\n      language_id: [languageId],\r\n      language_name: [languageName]\r\n    });\r\n  }\r\n  // function for adding new language in FormArray\r\n  addItem(value): void {\r\n    let items = this.wineForm.get(\"items\") as FormArray;\r\n    items.push(this.createLanguage(value.id, value.name));\r\n    let index = this.languagesData.indexOf(value, 0);\r\n    this.languagesData.splice(index, 1);\r\n  }\r\n  resetForm() {\r\n    this.myNgForm.resetForm();\r\n  }\r\n  // submitting form \r\n  onSubmit() {\r\n    const fd: FormData = new FormData();\r\n    let langForm = this.wineForm.get('items') as FormArray;\r\n    let languages: any[] = [];\r\n\r\n    langForm.controls.forEach(element => {\r\n      let formGroup = element as FormGroup;\r\n      languages.push({\r\n        language_id: formGroup.controls.language_id.value,\r\n        name: \"description\",\r\n        value: formGroup.controls[\"wineDesc\"].value\r\n      });\r\n      languages.push({\r\n        language_id: formGroup.controls.language_id.value,\r\n        name: \"name\",\r\n        value: formGroup.controls[\"wineName\"].value\r\n      });\r\n    });\r\n    this.wineForm.controls.languages.setValue(languages);\r\n\r\n    let formInput = this.wineForm.value;\r\n    delete formInput.items;\r\n\r\n    if (this.wineImage !== undefined) {\r\n      fd.append(\"bottle\", this.wineImage);\r\n    }\r\n    fd.append(\"json\", JSON.stringify(formInput));\r\n    if(this.isFormValid) {\r\n    this.http.postFormData(\"create/wine\", fd).subscribe(\r\n      httpResponse => {\r\n        if (httpResponse.status === 201) {\r\n          let controls = this.wineForm.get('items') as FormArray;\r\n          while (controls.length !== 0) {\r\n            controls.removeAt(0);\r\n          }\r\n          this.http.get('dropdown/language', 1).subscribe(lang => {\r\n            this.languagesData = lang.json();\r\n          });\r\n          this.wineImage = null;\r\n          languages = [];\r\n          this.bottlePath.nativeElement.click();\r\n          this.resetForm();\r\n          this.alert.showNotification(\r\n            \"Uspesno ste kreirali vino!\",\r\n            \"success\",\r\n            \"notification\"\r\n          );\r\n        }\r\n      },\r\n      error => {\r\n        this.alert.showNotification(\r\n          \"Greska, neuspesno kreiranje vina molimo proverite podatke!\",\r\n          \"danger\",\r\n          \"error\"\r\n        );\r\n      }\r\n    );\r\n  } else {\r\n    this.alert.showNotification('Greska slika nije odgovarajuceg formata, molimo proverite!', 'danger', '');\r\n  }\r\n  }\r\n  // destroying all subscriptions\r\n  ngOnDestroy(): void {\r\n    this.subscriptionArea.unsubscribe();\r\n    this.subscriptionCategory.unsubscribe();\r\n    this.subscriptionWinery.unsubscribe();\r\n    this.subscriptionLang.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/wines/add/add.component.ts","module.exports = \".form-full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n#langDropdown {\\r\\n    margin-top: -10px;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\ni.fcancel.material-icons {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nul.dropdown-menu.dropdown-menu-left {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#card-wine {\\r\\n    margin-top: 45px;\\r\\n}\\r\\n\\r\\n.image-tag {\\r\\n    font-size: 26px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wines/edit/edit.component.css\n// module id = ./src/app/wines/edit/edit.component.css\n// module chunks = wines.module","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <form [formGroup]=\\\"wineForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <div class=\\\"col-md-offset-1 col-md-10\\\">\\r\\n                    <div formArrayName=\\\"items\\\" *ngFor=\\\"let item of wineForm.get('items').controls; let i = index;\\\">\\r\\n                        <div [formGroupName]=\\\"i\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"card\\\">\\r\\n                                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"darkred\\\">\\r\\n                                            <i class=\\\"material-icons\\\">language</i>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"pull-right remove-btn\\\">\\r\\n                                            <h4 class=\\\"card-title\\\"><i (click)=\\\"onRemoveLangs(item.controls.language_name.value , item.controls.language_id.value ,  i)\\\" class=\\\"fcancel material-icons\\\">cancel</i></h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"card-content\\\">\\r\\n                                            <h4 class=\\\"card-title\\\">{{item.controls['language_name'].value}}</h4>\\r\\n                                            <div class=\\\"col-md-offset-1 col-md-10\\\">\\r\\n                                                <div class=\\\"row\\\">\\r\\n                                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                                        <mat-label>Naziv vina</mat-label>\\r\\n                                                        <input (change)=\\\"unsave()\\\" matInput placeholder=\\\"Naziv\\\" formControlName=\\\"wineName\\\">\\r\\n                                                        <mat-error>\\r\\n                                                            <span *ngIf=\\\"item.controls['wineName'].touched && item.controls['wineName'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                                        </mat-error>\\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"row \\\">\\r\\n                                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                                        <mat-label>Opis vina</mat-label>\\r\\n                                                        <textarea matInput (change)=\\\"unsave()\\\" placeholder=\\\"Opis...\\\" rows=\\\"5\\\" formControlName=\\\"wineDesc\\\"></textarea>\\r\\n                                                        <mat-error>\\r\\n                                                            <span *ngIf=\\\"item.controls['wineDesc'].touched && item.controls['wineDesc'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                                        </mat-error>\\r\\n                                                    </mat-form-field>\\r\\n                                                    <div class=\\\"row\\\">\\r\\n                                                        <button type=\\\"button\\\" *ngIf=\\\"item.controls['flag'].value == 1\\\" (click)=\\\"onSaveLanguage(item)\\\" class=\\\"btn btn-rose btn-fill btn-wd pull-right\\\" [disabled]=\\\"!item.valid || saved\\\">SAČUVAJ JEZIK</button>\\r\\n                                                    </div>\\r\\n                                                    <div id=\\\"langDropdown\\\" class=\\\"dropdown\\\" *ngIf=\\\"wineForm.get('items').controls.length == i+1 && languagesData.length !== 0\\\">\\r\\n                                                        <button class=\\\"dropdown-toggle btn btn-rose btn-block\\\" data-toggle=\\\"dropdown\\\">dodaj jezik<b class=\\\"caret\\\"></b></button>\\r\\n                                                        <ul class=\\\"dropdown-menu dropdown-menu-left\\\">\\r\\n                                                            <li class=\\\"dropdown-header\\\">izaberi jezik</li>\\r\\n                                                            <li *ngFor=\\\"let lang of languagesData\\\">\\r\\n                                                                <a (click)=\\\"addItem(lang)\\\">{{ lang.name }}</a>\\r\\n                                                            </li>\\r\\n                                                        </ul>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"dropdown\\\" *ngIf=\\\"wineForm.get('items').controls.length == 0\\\">\\r\\n                                <button class=\\\"dropdown-toggle btn btn-rose btn-block\\\" data-toggle=\\\"dropdown\\\">dodaj jezik<b class=\\\"caret\\\"></b></button>\\r\\n                                <ul class=\\\"dropdown-menu dropdown-menu-left\\\">\\r\\n                                    <li class=\\\"dropdown-header\\\">izaberi jezik</li>\\r\\n                                    <li *ngFor=\\\"let lang of languagesData\\\">\\r\\n                                        <a (click)=\\\"addItem(lang)\\\">{{ lang.name }}</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div id=\\\"card-wine\\\" class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"darkred\\\">\\r\\n                            <i class=\\\"material-icons\\\">assignment</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Forma za dodavanje vina</h4>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <div class=\\\"pull-left\\\">\\r\\n                                        <legend>Primer</legend>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"fileinput fileinput-new text-center\\\" data-provides=\\\"fileinput\\\">\\r\\n                                        <div class=\\\"fileinput-new thumbnail\\\">\\r\\n                                            <img src=\\\"./assets/img/placeholder-177x600.png\\\" alt=\\\"...\\\">\\r\\n                                        </div>\\r\\n                                        <label class=\\\"image-tag\\\">177x600</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <div class=\\\"pull-left\\\">\\r\\n                                        <legend>Slika flaše</legend>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"fileinput fileinput-new text-center\\\" data-provides=\\\"fileinput\\\">\\r\\n                                        <div class=\\\"fileinput-new thumbnail\\\">\\r\\n                                            <img *ngIf=\\\"bottleImage !== null\\\" [src]=\\\"bottleImage\\\" alt=\\\"...\\\">\\r\\n                                        </div>\\r\\n                                        <div class=\\\"fileinput-preview fileinput-exists thumbnail\\\"></div>\\r\\n                                        <div>\\r\\n                                            <span class=\\\"btn btn-rose btn-block btn-file\\\">\\r\\n                                            <span class=\\\"fileinput-new\\\">Izaberi sliku flaše</span>\\r\\n                                            <span class=\\\"fileinput-exists\\\">Promeni</span>\\r\\n                                            <input (change)=\\\"onUploadWineImage($event)\\\" type=\\\"file\\\" name=\\\"logo_image\\\" />\\r\\n                                            </span>\\r\\n                                            <a href=\\\"#\\\" #bottlePath class=\\\"btn btn-danger btn-round fileinput-exists\\\" data-dismiss=\\\"fileinput\\\"><i class=\\\"fa fa-times\\\"></i>Ukloni</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <ul>\\r\\n                                        <li><strong>OBAVEŠTENJE! Odaberite da li želite da postavite pozadinu za sliku vina</strong></li>\\r\\n                                        <ul>\\r\\n                                            <li><strong>(postavi pozadinu) izaberite ukoliko je slika *jpg *jpeg formata, odnosno nema transparentu pozadinu</strong></li>\\r\\n                                        </ul>\\r\\n                                        <li><strong>OBAVEŠTENJE! Slika mora biti rezolucije 177 x 600 zbog adekvatnog prikaza u Android Aplikaciji</strong></li>\\r\\n                                    </ul>\\r\\n                                    <div class=\\\"checkbox-radios pull-left\\\">\\r\\n                                        <div class=\\\"radio\\\">\\r\\n                                            <mat-radio-group formControlName=\\\"background\\\" [value]=\\\"wineForm.controls['background'].value\\\">\\r\\n                                                <mat-radio-button [value]=\\\"1\\\"><strong>Postavi pozadinu</strong></mat-radio-button><br/>\\r\\n                                                <mat-radio-button [value]=\\\"0\\\"><strong>Ukloni pozadinu</strong></mat-radio-button>\\r\\n                                            </mat-radio-group>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Sorta vina</mat-label>\\r\\n                                        <input matInput placeholder=\\\"Sorta\\\" formControlName=\\\"type\\\">\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['type'].touched && wineForm.controls['type'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Kategorija vina</mat-label>\\r\\n                                        <mat-select formControlName=\\\"category_id\\\" [value]=\\\"wineForm.controls['category_id'].value\\\" placeholder=\\\"Kategorija\\\">\\r\\n                                            <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">{{category.name}}</mat-option>\\r\\n                                        </mat-select>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['category_id'].touched && wineForm.controls['category_id'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Regija</mat-label>\\r\\n                                        <mat-select formControlName=\\\"area_id\\\" [value]=\\\"wineForm.controls['area_id'].value\\\" placeholder=\\\"Regija\\\">\\r\\n                                            <mat-option *ngFor=\\\"let area of areas\\\" [value]=\\\"area.id\\\">{{area.name}}</mat-option>\\r\\n                                        </mat-select>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['area_id'].touched && wineForm.controls['area_id'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Vinarija</mat-label>\\r\\n                                        <mat-select formControlName=\\\"winery_id\\\" [value]=\\\"wineForm.controls['winery_id'].value\\\" placeholder=\\\"Vinarija\\\">\\r\\n                                            <mat-option *ngFor=\\\"let winery of wineryList\\\" [value]=\\\"winery.id\\\">{{winery.name}}</mat-option>\\r\\n                                        </mat-select>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['winery_id'].touched && wineForm.controls['winery_id'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Godina berbe</mat-label>\\r\\n                                        <input matInput type=\\\"number\\\" placeholder=\\\"Godina\\\" formControlName=\\\"harvest_year\\\">\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['harvest_year'].touched && wineForm.controls['harvest_year'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Alkohol</mat-label>\\r\\n                                        <input matInput type=\\\"number\\\" placeholder=\\\"Alkohol &#37;\\\" formControlName=\\\"alcohol\\\">\\r\\n                                        <span matSuffix>&#37;</span>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['alcohol'].touched && wineForm.controls['alcohol'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                        <mat-label>Temperatura serviranja</mat-label>\\r\\n                                        <input matInput type=\\\"number\\\" placeholder=\\\"Temperatura u &#8451;\\\" formControlName=\\\"serving_temp\\\">\\r\\n                                        <span matSuffix>&#8451;</span>\\r\\n                                        <mat-error>\\r\\n                                            <span *ngIf=\\\"wineForm.controls['serving_temp'].touched && wineForm.controls['serving_temp'].hasError('required')\\\">Ovo polje je <strong>obavezno!</strong></span>\\r\\n                                        </mat-error>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-rose btn-fill btn-wd\\\" [disabled]=\\\"!wineForm.valid\\\">SAČUVAJ</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wines/edit/edit.component.html\n// module id = ./src/app/wines/edit/edit.component.html\n// module chunks = wines.module","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormArray,\r\n  Validators,\r\n  RequiredValidator,\r\n  FormGroupDirective,\r\n  FormControl,\r\n  NgForm\r\n} from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { NotificationsService } from \"../../notifications/notifications.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { VIEWPORT_RULER_PROVIDER_FACTORY } from \"@angular/cdk/scrolling\";\r\n\r\ndeclare var swal; // declaration for alert modals\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"app-edit\",\r\n  templateUrl: \"./edit.component.html\",\r\n  styleUrls: [\"./edit.component.css\"]\r\n})\r\nexport class EditComponent implements OnInit {\r\n  //variables\r\n  wineForm: FormGroup; // formBuilder / formGroup\r\n  subscriptionCategory: Subscription; // subscription for areas\r\n  subscriptionArea: Subscription; // subscription for categories\r\n  subscriptionWinery: Subscription; // subscription for winery\r\n  subscriptionLang: Subscription; // subscription for languages\r\n  subscriptionData: Subscription; // subscription for server-data patch init\r\n  subscriptionParams: Subscription; // subscription for get params from URL\r\n  categories: any[] = []; // storage result of get request for list of categories\r\n  areas: any[] = []; // storage result of get request for list of areas\r\n  wineryList: any[] = []; // storage result of get request for list of wineries\r\n  languagesData: any[] = []; // storage result of all languages\r\n  serverData: any; // storage result get data for patch init \r\n  id: number; // storage id for selected wine\r\n  matcher = new MyErrorStateMatcher(); // error message for Angular Material Inputs\r\n  uploadedImage; \r\n  bottleImage: string = null; // image\r\n  saved = false; // language saved\r\n\r\n@ViewChild('bottlePath') bottlePath: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpService,\r\n    private alert: NotificationsService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // get get url params for wine ID\r\n    this.subscriptionParams = this.route.params.subscribe(\r\n      params => (this.id = params.id)\r\n    );\r\n    // get all categories\r\n    this.subscriptionCategory = this.http\r\n      .get(\"dropdown/category\", 1)\r\n      .subscribe(httpResponse => {\r\n        this.categories = httpResponse.json();\r\n      });\r\n    // get all areas\r\n    this.subscriptionArea = this.http\r\n      .get(\"dropdown/area\", 1)\r\n      .subscribe(httpresponse => {\r\n          this.areas = httpresponse.json();    \r\n      });\r\n    // get all wineries\r\n    this.subscriptionWinery = this.http\r\n      .get(\"dropdown/winery\", 1)\r\n      .subscribe(httpresponse => {\r\n        this.wineryList = httpresponse.json();\r\n      });\r\n    // get all languages\r\n    this.subscriptionLang = this.http\r\n      .get(\"dropdown/language\", 1)\r\n      .subscribe(httpresponse => {\r\n        this.languagesData = httpresponse.json();\r\n      });\r\n      this.initLoadingData();\r\n    // declaration formBuilder and all his attrib\r\n    this.wineForm = this.fb.group({\r\n      type: [\"\", Validators.required],\r\n      area_id: [\"\", Validators.required],\r\n      category_id: [\"\", Validators.required],\r\n      winery_id: [\"\", Validators.required],\r\n      harvest_year: [\"\", Validators.required],\r\n      alcohol: [\"\", Validators.required],\r\n      serving_temp: [\"\", Validators.required],\r\n      background: [\"\", Validators.required],\r\n      items: this.fb.array([]),\r\n      languages: [\"\"]\r\n    });\r\n    \r\n  }\r\n  // get all data from server to set it on form\r\n  initLoadingData(onSave = false) {\r\n    this.subscriptionData = this.http\r\n      .get(\"patch/initialize/wine/\" + this.id, 1)\r\n      .subscribe(httpResponse => {\r\n        if (httpResponse.status === 200) {\r\n          let serverData = (this.serverData = httpResponse.json());\r\n          this.wineForm.controls.type.setValue(this.serverData.type);\r\n          this.wineForm.controls.area_id.setValue(this.serverData.area_id);\r\n          this.wineForm.controls.background.setValue(this.serverData.background);\r\n          this.wineForm.controls.harvest_year.setValue(this.serverData.harvest_year);\r\n          this.wineForm.controls.alcohol.setValue(this.serverData.alcohol);\r\n          this.wineForm.controls.winery_id.setValue(this.serverData.winery.id);\r\n          this.wineForm.controls.category_id.setValue(this.serverData.category.id);\r\n          this.wineForm.controls.serving_temp.setValue(this.serverData.serving_temp);\r\n          this.bottleImage = this.serverData.bottle_image;\r\n          serverData.languages.forEach((lang, langIndex) => {\r\n            let name = \"\";\r\n            let desc = \"\";\r\n            let fieldsindex;\r\n            let name_id;\r\n            let desc_id;\r\n\r\n            lang.fields.forEach((field, fieldIndex) => {\r\n              fieldsindex = fieldIndex;\r\n              if (field.name === \"name\") {\r\n                name = field.value;\r\n                name_id = field.id;\r\n              }\r\n              if (field.name === \"description\") {\r\n                desc = field.value;\r\n                desc_id = field.id;\r\n              }\r\n            });\r\n            if(!onSave) {\r\n              var index = this.languagesData.findIndex(\r\n                item => item.name === lang.language\r\n              ); // SELECTING INDEX OF OBJECT IN ARRAY BY PROPERTY *(etc. name)\r\n              this.languagesData.splice(index, 1);\r\n              }\r\n            let language_name = lang.language;\r\n            let language_id = lang.language_id;\r\n            this.createItem(\r\n              name_id,\r\n              desc_id,\r\n              name,\r\n              desc,\r\n              language_name,\r\n              language_id,\r\n              false\r\n            );\r\n          });\r\n        }\r\n      }, error => {\r\n          \r\n      });\r\n  }\r\n  // creating new formGroup for languages inputs\r\n  createLanguage(nameId, descId, wName, wDesc, lName, lId, isNew = true): FormGroup {\r\n    let fg = this.fb.group({\r\n      wineName: [wName, Validators.required],\r\n      wineDesc: [wDesc, Validators.required],\r\n      name_id: nameId,\r\n      desc_id: descId,\r\n      language_name: [lName],\r\n      language_id: [lId],\r\n      flag: ['']\r\n    });\r\n    if (isNew) fg.controls['flag'].setValue(1);\r\n    return fg;\r\n  }\r\n  // adding new item to FormArray items and splice item from langsArray\r\n  addItem(value): void {\r\n    let isSaved;\r\n    let items = this.wineForm.get(\"items\") as FormArray;\r\n    items.controls.forEach(item => {\r\n      let items = item as FormGroup;\r\n      if (items.controls.flag.value === 1) {\r\n        isSaved = true;\r\n        swal({\r\n          title: \"Upozorenje! Molimo Vas da sačuvate predhodni jezik!\",\r\n          buttonsStyling: false,\r\n          confirmButtonClass: \"btn btn-success\"\r\n      });\r\n      return;\r\n      }\r\n      isSaved = false;\r\n    });\r\n    if (!isSaved) {\r\n      items.push(\r\n        this.createLanguage(value.id, null, \"\", \"\", value.name, value.id)\r\n      );\r\n      let index = this.languagesData.indexOf(value, 0);\r\n      this.languagesData.splice(index, 1);\r\n    }\r\n  }\r\n  // remove all from items formArray\r\n  removeItem() {\r\n    let controls = this.wineForm.get('items') as FormArray;\r\n    while (controls.length !== 0) {\r\n      controls.removeAt(0);\r\n    }\r\n  }\r\n  // generating new languages with data from server\r\n  createItem(nameId, descId, wName, wDesc, lname, lid, isNew = true): void {\r\n    let items = this.wineForm.get(\"items\") as FormArray;\r\n    items.push(this.createLanguage(nameId, descId, wName, wDesc, lname, lid, isNew));\r\n  }\r\n  // saving when add new language\r\n  onSaveLanguage(value) {\r\n    let languageFormFields: any[] = [];\r\n    languageFormFields.push({\r\n      language_id: value.controls.name_id.value,\r\n      name: \"description\",\r\n      value: value.controls.wineDesc.value\r\n    });\r\n    languageFormFields.push({\r\n      language_id: value.controls.name_id.value,\r\n      name: \"name\",\r\n      value: value.controls.wineName.value\r\n    });\r\n    let postData = {\r\n      languages: languageFormFields\r\n    };\r\n    this.http\r\n      .post(\"add/language/wine/\" + this.id, postData)\r\n      .subscribe(httpResponse => {\r\n        if (httpResponse.status === 204) {\r\n          let itemArray = this.wineForm.controls['items'] as FormArray;\r\n          itemArray.controls.forEach(element =>{\r\n            element.markAsUntouched;\r\n         });\r\n          this.alert.showNotification(\r\n            \"uspesno ste sacuvali jezik\",\r\n            \"success\",\r\n            \"notifications\"\r\n          );\r\n          this.removeItem()\r\n          this.initLoadingData(true);\r\n        }\r\n      });\r\n  }\r\n  // uploading picture of wine\r\n  onUploadWineImage(event) {\r\n    this.uploadedImage = <File>event.target.files[0];\r\n  }\r\n  // removing language form\r\n  onRemoveLangs(language_name, language_id, index) {\r\n    let selected = this.wineForm.get(\"items\") as FormArray;\r\n\r\n    swal({\r\n      title: `Da li ste sigurni da želite da uklonite ${language_name} jezik`,\r\n      text: \"Vrednosti polja biće trajno obrisane!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonText: 'ne',\r\n      confirmButtonClass: \"btn btn-success\",\r\n      cancelButtonClass: \"btn btn-danger\",\r\n      confirmButtonText: \"Da, obriši!\",\r\n      buttonsStyling: false\r\n    }).then(\r\n      () => {\r\n        this.http\r\n          .delete(\"delete/language/wine/\" + this.id + \"/\" + language_id)\r\n          .subscribe(httpResponse => {\r\n            if (httpResponse.status === 204) {\r\n              swal({\r\n                title: \"Obrisano!\",\r\n                text: `${language_name} jezik je uspesno obrisan!`,\r\n                type: \"success\",\r\n                confirmButtonClass: \"btn btn-success\",\r\n                buttonsStyling: false\r\n              });\r\n              selected.removeAt(index);\r\n              let renewLang = {\r\n                name: language_name,\r\n                id: language_id\r\n              };\r\n              this.languagesData.push(renewLang);\r\n            } else if (httpResponse.status !== 204) {\r\n              this.alert.showNotification('neuspelo brisanje jezika', 'danger', 'notifications');\r\n            }\r\n          }, error => {\r\n            this.alert.showNotification(`Desila se greska ${language_name} jezik nije obrisan!, pokusajte kasnije`, 'danger', '');\r\n          });\r\n      }, (dismiss) => {\r\n\r\n      });\r\n  }\r\n  unsave() {\r\n    this.saved = false;\r\n  }\r\n  // submitting form\r\n  onSubmit() {\r\n    const fd: FormData = new FormData();\r\n    \r\n    let languages: any[] = [];\r\n    let langForm = this.wineForm.get('items') as FormArray;\r\n\r\n    // parse data from FormArray items to this.language array\r\n    langForm.controls.forEach(element => {\r\n      let formGroup = element as FormGroup;\r\n      languages.push({\r\n        id: formGroup.controls.desc_id.value,\r\n        name: \"description\",\r\n        value: formGroup.controls[\"wineDesc\"].value\r\n      });\r\n      languages.push({\r\n        id: formGroup.controls.name_id.value,\r\n        name: \"name\",\r\n        value: formGroup.controls[\"wineName\"].value\r\n      });\r\n    });\r\n    this.wineForm.controls.languages.setValue(languages);\r\n    let formInput = this.wineForm.value;\r\n    delete formInput.items;\r\n    if (this.uploadedImage !== undefined) {\r\n      fd.append(\"bottle\", this.uploadedImage);\r\n    }\r\n    fd.append(\"json\", JSON.stringify(formInput));\r\n\r\n    this.http.postFormData(\"patch/wine/\" + this.id, fd).subscribe(\r\n      httpResponse => {\r\n        //   if (event.type === HttpEventType.UploadProgress) {\r\n        //     console.log(\r\n        //       \"Upload progress:\" +\r\n        //         Math.round(event.loaded / event.total * 100) +\r\n        //         \"%\"\r\n        //     )\r\n        //     console.log(event);\r\n        //   }\r\n        if (httpResponse.status === 204) {\r\n          this.removeItem();\r\n          this.initLoadingData(true);\r\n          this.alert.showNotification(\r\n            \"Uspesno ste izmenili podatke!\",\r\n            \"success\",\r\n            \"notification\"\r\n          );\r\n        }\r\n      },\r\n      error => {\r\n        this.alert.showNotification(\r\n          \"Greska , niste uspesno sacuvali podatke!\",\r\n          \"danger\",\r\n          \"error\"\r\n        );\r\n      }\r\n    );\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/wines/edit/edit.component.ts","module.exports = \".loading_spinner {\\r\\n    position: absolute;\\r\\n    margin-left: 50%;\\r\\n    margin-top: 70px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wines/wines.component.css\n// module id = ./src/app/wines/wines.component.css\n// module chunks = wines.module","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"col-md-1 col-md-offset-11\\\">\\r\\n                    <button (click)=\\\"OnAddWine()\\\" class=\\\"btn btn-rose btn-lg\\\">DODAJ</button>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"darkred\\\">\\r\\n                        <i class=\\\"material-icons\\\">assignment</i>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-content\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Vina</h4>\\r\\n                        <div class=\\\"toolbar\\\">\\r\\n                            <!--        Here you can write extra buttons/actions for the toolbar              -->\\r\\n                            <mat-form-field class=\\\"form-full-width\\\">\\r\\n                                <mat-label>Izaberi jezik</mat-label>\\r\\n                                <mat-select [value]=\\\"selectedLanguage\\\" placeholder=\\\"jezik\\\">\\r\\n                                    <mat-option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.id\\\" (click)=\\\"onChangeLanguage(language.id, language.name)\\\">{{language.name}}</mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"material-datatables table-responsive\\\">\\r\\n                            <div class=\\\"loading_spinner\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\r\\n\\r\\n                                <mat-spinner [diameter]=\\\"40\\\"></mat-spinner>\\r\\n\\r\\n                            </div>\\r\\n                            <mat-table class=\\\"winery-table mat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\" matSort matSortDisableClear>\\r\\n\\r\\n                                <ng-container matColumnDef=\\\"name\\\">\\r\\n\\r\\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Ime</mat-header-cell>\\r\\n\\r\\n                                    <mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell>\\r\\n\\r\\n                                </ng-container>\\r\\n\\r\\n                                <ng-container matColumnDef=\\\"harvest_year\\\">\\r\\n\\r\\n                                    <mat-header-cell *matHeaderCellDef>Godina berbe</mat-header-cell>\\r\\n\\r\\n                                    <mat-cell class=\\\"description-cell\\\" *matCellDef=\\\"let element\\\">{{element.harvest_year}}</mat-cell>\\r\\n\\r\\n                                </ng-container>\\r\\n                                <ng-container matColumnDef=\\\"winery_name\\\">\\r\\n\\r\\n                                    <mat-header-cell *matHeaderCellDef>Ime vinarije</mat-header-cell>\\r\\n\\r\\n                                    <mat-cell class=\\\"description-cell\\\" *matCellDef=\\\"let element\\\">{{element.winery_name}}</mat-cell>\\r\\n\\r\\n                                </ng-container>\\r\\n                                <ng-container matColumnDef=\\\"actions\\\">\\r\\n\\r\\n                                    <mat-header-cell *matHeaderCellDef>Akcije</mat-header-cell>\\r\\n\\r\\n                                    <mat-cell class=\\\"actions-cell\\\" *matCellDef=\\\"let element\\\">\\r\\n                                        <button (click)=\\\"OnEditWine(element.id)\\\" type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-just-icon btn-success rounded\\\"><i class=\\\"material-icons\\\">edit</i></button>\\r\\n                                        <button (click)=\\\"OnDeleteWine(element.id, element.name)\\\" type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-just-icon btn-danger rounded\\\"><i class=\\\"material-icons\\\">close</i></button>\\r\\n                                    </mat-cell>\\r\\n\\r\\n                                </ng-container>\\r\\n\\r\\n                                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n\\r\\n                                <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n\\r\\n                            </mat-table>\\r\\n\\r\\n                            <mat-paginator [length]=\\\"total\\\" [pageSize]=\\\"pageSize\\\"></mat-paginator>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- end content-->\\r\\n                </div>\\r\\n                <!--  end card  -->\\r\\n            </div>\\r\\n            <!-- end col-md-12 -->\\r\\n        </div>\\r\\n        <!-- end row -->\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wines/wines.component.html\n// module id = ./src/app/wines/wines.component.html\n// module chunks = wines.module","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { SelectionModel, DataSource } from '@angular/cdk/collections';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { debounceTime, distinctUntilChanged, startWith, tap, delay } from 'rxjs/operators';\r\nimport { NotificationsService } from '../notifications/notifications.service';\r\nimport { WineDataSource } from '../services/wine.datasource';\r\nimport { HttpService } from '../services/http.service';\r\nimport { Wine } from '../model/wine';\r\n\r\ndeclare var $;\r\ndeclare var swal;\r\n\r\n@Component({\r\n  selector: 'app-wines',\r\n  templateUrl: './wines.component.html',\r\n  styleUrls: ['./wines.component.css']\r\n})\r\nexport class WinesComponent implements OnInit, OnDestroy {\r\n\r\n  subscription: Subscription;\r\n  subscriptionLang: Subscription;\r\n  defaultLanguage: number = 1;\r\n  selectedLanguage: number;\r\n  languages: any[] = [];\r\n  total;\r\n  pageSize;\r\n\r\n  dataSource: WineDataSource;\r\n  displayedColumns = ['name', 'harvest_year', 'winery_name', 'actions'];\r\n  \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private alert: NotificationsService,\r\n    private http: HttpService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new WineDataSource(this.http);\r\n    this.dataSource.loadWines(1, this.defaultLanguage);\r\n    \r\n    this.selectedLanguage = this.defaultLanguage;\r\n    this.subscriptionLang = this.http.get(\"dropdown/language\", 1).subscribe(httpResponse => {\r\n      this.languages = httpResponse.json();\r\n    });\r\n\r\n    // fetch data for table\r\n    this.subscription = this.http\r\n      .get(\"get/wine\", this.selectedLanguage)\r\n      .subscribe(httpResponse => {\r\n        if(httpResponse.status === 200) {\r\n          this.total = httpResponse.json().total;\r\n          this.pageSize = httpResponse.json().per_page;\r\n        }\r\n      }, error => {\r\n        this.alert.showNotification('Greska na serveru, molimo pokusajte kasnije!', 'danger', '');\r\n      });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.paginator.page.pipe(\r\n      tap(() => this.loadWineryPage())\r\n    ).subscribe();\r\n  }\r\n  loadWineryPage() {\r\n    this.dataSource.loadWines(\r\n        this.paginator.pageIndex + 1, this.selectedLanguage);\r\n  }\r\n  onChangeLanguage(id: number, name: string) {\r\n    this.selectedLanguage = id;\r\n    this.dataSource = new WineDataSource(this.http);\r\n    this.dataSource.loadWines(this.paginator.pageIndex, this.selectedLanguage);\r\n    this.paginator.firstPage();\r\n\r\n    this.subscription = this.http\r\n      .get(\"get/wine\", this.selectedLanguage)\r\n      .subscribe(httpResponse => {\r\n        if(httpResponse.status === 200) {\r\n          this.total = httpResponse.json().total;\r\n          this.pageSize = httpResponse.json().per_page;\r\n        }\r\n      });\r\n  }\r\n\r\n  OnAddWine() {\r\n    this.router.navigate([\"wines/add\"]);\r\n  }\r\n\r\n  OnEditWine(id) {\r\n    this.router.navigate([\"wines/edit\", id]);\r\n  }\r\n\r\n  OnDeleteWine(id, name) {\r\n    swal({\r\n      title: `Da li ste sigurni da želite da obrišete ${name} ?`,\r\n      text: \"Podatke nije moguće povratiti nakon brisanja!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonText: 'ne',\r\n      confirmButtonClass: \"btn btn-success\",\r\n      cancelButtonClass: \"btn btn-danger\",\r\n      confirmButtonText: \"Da, obriši!\",\r\n      buttonsStyling: false\r\n    }).then(() => {\r\n      this.http.delete(\"delete/wine/\" + id).subscribe(httpResponse => {\r\n        if (httpResponse.status === 204) {\r\n          swal({\r\n            title: \"Obrisano!\",\r\n            text: `Vino ${name} je uspesno obrisano`,\r\n            type: \"success\",\r\n            confirmButtonClass: \"btn btn-success\",\r\n            buttonsStyling: false\r\n          });\r\n          this.http.get('get/wine', this.selectedLanguage).subscribe(data => {\r\n            this.paginator.length = data.json().total;\r\n          })\r\n          \r\n          this.dataSource = new WineDataSource(this.http);\r\n          this.dataSource.loadWines(this.paginator.pageIndex, this.selectedLanguage);\r\n          this.paginator.firstPage();\r\n        }\r\n        error => {\r\n          this.alert.showNotification(\r\n            \"Greska!\" + name + \"vino nije obrisano\",\r\n            \"danger\",\r\n            \"error\"\r\n          );\r\n        };\r\n      });\r\n    }, (dismiss) => {\r\n      \r\n    });\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.subscriptionLang.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/wines/wines.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { WinesComponent } from \"./wines.component\";\r\nimport { EditComponent } from \"../wines/edit/edit.component\";\r\nimport { AddComponent } from \"./add/add.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { WinesTable } from \"./wines.routing\";\r\nimport {\r\n  MatFormFieldModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule\r\n} from \"@angular/material\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(WinesTable),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatRadioModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule\r\n  ],\r\n  declarations: [\r\n    WinesComponent, \r\n    EditComponent, \r\n    AddComponent\r\n  ],\r\n  exports: [\r\n    MatFormFieldModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class WinesModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/wines/wines.module.ts","import { Routes } from '@angular/router';\r\nimport { WinesComponent } from './wines.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { AddComponent } from './add/add.component';\r\n\r\n\r\nexport const WinesTable: Routes = [\r\n    {\r\n        path: '',\r\n        children: [{\r\n            path: '',\r\n            component: WinesComponent\r\n        }]\r\n    }, {\r\n        path: '',\r\n        children: [{\r\n            path: 'edit/:id',\r\n            component: EditComponent,\r\n            pathMatch: 'full'\r\n        }]\r\n    }, {\r\n        path: '',\r\n        children: [{\r\n            path: 'add',\r\n            component: AddComponent,\r\n            pathMatch: 'full'\r\n        }]\r\n    }\r\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/wines/wines.routing.ts"],"sourceRoot":"webpack:///"}